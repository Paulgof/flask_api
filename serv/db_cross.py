from psycopg2 import connect
from psycopg2 import ProgrammingError, Error, DataError
from psycopg2.extras import Json


class DBConnector:

    def __init__(self, config):
        self._dbname = config.get('DATABASE_NAME')
        self._dbuser = config.get('DATABASE_USER')
        self._create_table()

    def _db_connect(self):
        return connect(dbname=self._dbname, user=self._dbuser)

    def _create_table(self):
        conn = self._db_connect()
        cursor = conn.cursor()
        try:
            create_query = 'CREATE TABLE imports (' \
                           'id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,' \
                           'users jsonb)'
            cursor.execute(create_query)
            conn.commit()
            print('Table "imports" has created')
        except ProgrammingError:
            print('Table "imports" already exists')
        finally:
            cursor.close()
            conn.close()

    def add_import(self, pack):
        conn = self._db_connect()
        cursor = conn.cursor()
        result = -1
        try:
            insert_query = 'INSERT INTO imports (users) VALUES (%s) RETURNING id'
            cursor.execute(insert_query, [Json(pack)])
            result = cursor.fetchone()[0]
            conn.commit()
        except Error:
            print('DB Error')
        finally:
            cursor.close()
            conn.close()
        print('FROM INSERT GOT ID =', result)
        return result

    def patch_user(self, import_id, citizen_id, data):
        conn = self._db_connect()
        cursor = conn.cursor()
        result = -1
        try:
            update_query = 'UPDATE imports SET users = jsonb_set((users), %s, %s, false) WHERE id = %s'
            select_user_query = 'SELECT jsonb_extract_path(users, %s) FROM imports WHERE id = %s'
            for key in data.keys():
                cursor.execute(update_query, ["{" + str(citizen_id) + ", " + key + "}", Json(data[key]), import_id])
            conn.commit()
            cursor.execute(select_user_query, [str(citizen_id), import_id])
            result = cursor.fetchone()[0]
        except BrokenPipeError:
            print('DB Error')
        finally:
            cursor.close()
            conn.close()
        print('PATCHED USER = ', result)
        return result

    def get_users(self, import_id):
        conn = self._db_connect()
        cursor = conn.cursor()
        result = -1
        try:
            select_query = 'SELECT users FROM imports WHERE id = %s'
            cursor.execute(select_query, [import_id])
            result = cursor.fetchone()[0]
        except Error:
            print('DB Error')
        finally:
            cursor.close()
            conn.close()
        print('GOT IMPORT WITH ID =', result)
        return result


